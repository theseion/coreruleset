##! Please refer to the documentation at
##! https://coreruleset.org/docs/development/regexp_assemble/.

##! The expression generated from this file matches a full HTTP
##! `Accept` header by following the specification as far as
##! necessary, while restricting the `charset` parameter
##! to a list of explicitly allowed values.
##! Where possible, the expression matches tokens "loosely",
##! to reduce complexity and the risk of false positives.

##! Specifications:
##! https://httpwg.org/specs/rfc7231.html#request.conneg
##! https://httpwg.org/specs/rfc7230.html

##! This is a duplicate of the 920600.data file.
##! There will be support for inclusion in the regexp_assemble tool in the future.
##! In the meantime, please keep both files in sync.

##!^ ^
##!$ $

##! Helpers
##!> define non-token-with-dquote-chars (),/:;<=>?![\x5c\]{}\s

##!> define non-token-chars \"{{non-token-with-dquote-chars}}

##!> define token-chars [^{{non-token-chars}}]

##!> define token-with-dquote-chars [^{{non-token-with-dquote-chars}}]

##!> define type-subtype (?:\*|{{token-chars}}+)

##!> define media-type {{type-subtype}}/{{type-subtype}}

##! list of allowed charsets
  ##!> assemble
"?
  ##!=>
    ##!> include allowed-charsets
  ##!=>
\b"?
  ##!=< allowed-charsets
  ##!<

##! valid media-range
  ##!> assemble
    ##!> assemble
(?:{{media-type}})
    ##!=>

      ##! parameters, semi-colon separated
      ##!> assemble
\s*;\s*
      ##!=>

        ##! "charset" with valid character set
        ##!> assemble
charset\s*=\s*
        ##!=>
        ##!=> allowed-charsets
        ##!<

        ##! If the first part wasn't a "charset", then
        ##! any name is allowed here that is not "charset".
        ##! Note that this doesn't follow the RFC strictly.
        ##!> assemble
          ##!> assemble
[^c{{non-token-chars}}]{{token-chars}}*
c[^h{{non-token-chars}}]{{token-chars}}*
ch[^a{{non-token-chars}}]{{token-chars}}*
cha[^r{{non-token-chars}}]{{token-chars}}*
char[^s{{non-token-chars}}]{{token-chars}}*
chars[^e{{non-token-chars}}]{{token-chars}}*
charse[^t{{non-token-chars}}]{{token-chars}}*
          ##!<
        ##!=>

        ##! any parameter values, since this is not a charset
\s*=\s*{{token-with-dquote-chars}}+
        ##!<
      ##!<
    ##!=>
    ##! any number of parameters
*
    ##!=>
    ##!<

  ##! Clients like to violate the RFC, be lenient with
  ##! terminating semi-colons.
(?:\s*;)?
  ##!=>
  ##!=< media-range
  ##!<


##! main assembly

##!=> media-range

  ##! Multiple "media-range" expressions can be
  ##! specified, comma separated.
  ##!> assemble
\s*,\s*
  ##!=>
  ##!=> media-range
  ##!<
##!=>

##! any number of media-ranges
*
##!=>
